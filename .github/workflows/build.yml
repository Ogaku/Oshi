# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build

on:
  push:
    branches: ["main"]
  # pull_request:
  #   branches: ["main"]

permissions: write-all

jobs:
  build-android:
    runs-on: macos-latest
    environment: Android
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "11"
          cache: "gradle"

      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          architecture: x64
          cache: true

      - name: Update versioning
        run: |
          sed -i '' "s/9.9.9+9/1.0.$(date '+%Y%m%d')+${{github.run_number}}/g" ./pubspec.yaml
          sed -i '' "s/9.9.9.9/1.0.$(date '+%Y%m%d').${{github.run_number}}/g" ./lib/share/share.dart

          sed -i '' "s/APPXTOKEN/${{ secrets.APPXTOKEN }}/g" ./lib/share/appcenter.dart
          sed -i '' "s/APPSECRET/${{ secrets.APPSECRET }}/g" ./lib/share/appcenter.dart

      - name: Set up dependencies
        run: flutter pub get
        
      - name: Retrieve base64 keystore and decode it to a file
        run: echo $KEYSTORE_BASE64 | base64 --decode > "${{ github.workspace }}/android-keystore.jks"
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_FILE_BASE64 }}

      - name: Create keystore.properties file
        env:
          KEYSTORE_PROPERTIES_PATH: ${{ github.workspace }}/android/keystore.properties
        run: |
          echo 'storeFile=${{ github.workspace }}/android-keystore.jks' > $KEYSTORE_PROPERTIES_PATH
          echo 'keyAlias=${{ secrets.KEYSTORE_KEY_ALIAS }}' >> $KEYSTORE_PROPERTIES_PATH
          echo 'storePassword=${{ secrets.KEYSTORE_PASSWORD }}' >> $KEYSTORE_PROPERTIES_PATH
          echo 'keyPassword=${{ secrets.KEYSTORE_KEY_PASSWORD }}' >> $KEYSTORE_PROPERTIES_PATH

      - name: Build for Android
        run: |
          flutter build apk --release --target-platform android-arm64
          mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/Oshi.apk

      - uses: actions/upload-artifact@v3
        with:
          name: android-release
          path: build/app/outputs/flutter-apk/Oshi.apk

  build-ios:
    runs-on: macos-latest
    environment: iOS
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          architecture: x64
          cache: true

      - name: Update versioning
        run: |
          sed -i '' "s/9.9.9+9/1.0.$(date '+%Y%m%d')+${{github.run_number}}/g" ./pubspec.yaml
          sed -i '' "s/9.9.9.9/1.0.$(date '+%Y%m%d').${{github.run_number}}/g" ./lib/share/share.dart

          sed -i '' "s/APPXTOKEN/${{ secrets.APPXTOKEN }}/g" ./lib/share/appcenter.dart
          sed -i '' "s/APPSECRET/${{ secrets.APPSECRET }}/g" ./lib/share/appcenter.dart

      - name: Set up dependencies
        run: flutter pub get

      - name: Build for iOS
        run: |
          flutter build ios --release --no-codesign
          cd ./build/ios/iphoneos && mkdir Payload && mv Runner.app Payload/Runner.app && zip -r Oshi.ipa Payload

      - uses: actions/upload-artifact@v3
        with:
          name: ios-release
          path: build/ios/iphoneos/Oshi.ipa

  release:
    runs-on: macos-latest
    environment: Dispatch
    needs: [build-android, build-ios]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Set up environment
        run: echo "::set-env name=NOW::1.0.$(date '+%Y%m%d').${{github.run_number}}"
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: "true"

      - name: Upload build artifacts
        uses: ncipollo/release-action@v1
        with:
          artifacts: "artifacts/android-release/Oshi.apk,artifacts/ios-release/Oshi.ipa"
          tag: ${{ env.NOW }}
          token: ${{ secrets.PAT }}
          
      - name: Update store releases
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.PAT }}
          repository: Ogaku/Toudai
          event-type: update-event

      - task: UseNode@1
        inputs:
        version: '10.15.1'

      - name: Upload AppCenter release
        run: |
          npm install -g appcenter-cli
          appcenter distribute groups publish -g Public -f artifacts/android-release/Oshi.apk -a Ogaku/Oshi --token ${{ secrets.APP_CENTER_TOKEN }}